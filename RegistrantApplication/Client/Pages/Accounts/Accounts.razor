@page "/accounts"
@using RegistrantApplication.ApiLibrary
@using RegistrantApplication.Shared.API

@using Newtonsoft.Json
@using RegistrantApplication.Shared.API.Accounts
@using Blazored.LocalStorage
@using RegistrantApplication.Client.Pages.Accounts.Components
@using RegistrantApplication.Shared
@using RegistrantApplication.Shared.API.Accounts.Get
@using RegistrantApplication.Shared.Database.Accounts

@inject RApi Api
@inject ISyncLocalStorageService Storage;

<PageTitle>Аккаунты</PageTitle>

<h2 class="text-lg font-medium leading-6 text-gray-900">Аккаунты</h2>
<div class="mt-6 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6">

    <div class="relative rounded-md border border-gray-300 px-3 py-2 shadow-sm focus-within:border-indigo-600 focus-within:ring-1 focus-within:ring-indigo-600">
        <label class="absolute -top-2 left-2 -mt-px inline-block bg-white px-1 text-xs font-medium text-gray-900">Поиск</label>
        <input type="text" @bind-value="Search" class="block w-full border-0 p-0 text-gray-900 placeholder-gray-500 focus:ring-0 sm:text-sm" placeholder="ФИО/номер тел.">
    </div>
    <div class="relative flex items-center">
        <div class="flex h-5 items-center">
            <input @bind-value="ShowEmployee" type="checkbox" class="h-4 w-4 rounded border-gray-300 text-indigo-600 ">
        </div>
        <div class="ml-3 text-sm">
            <label class="font-medium text-gray-700">Сотрудники</label>
        </div>
    </div>
    <div class="relative flex items-center">
        <div class="flex h-5 items-center">
            <input @bind-value="ShowDeleted" type="checkbox" class="h-4 w-4 rounded border-gray-300 text-indigo-600 ">
        </div>
        <div class="ml-3 text-sm">
            <label class="font-medium text-gray-700">Удаленные</label>
        </div>
    </div>

    <button class="inline-flex items-center rounded-md border border-transparent bg-indigo-600 px-3 py-2 text-sm font-medium leading-4 text-white shadow-sm hover:bg-indigo-700 ">Поиск</button>
    <button @onclick="OpenModalAdd" class="inline-flex items-center rounded-md border border-transparent bg-indigo-600 px-3 py-2 text-sm font-medium leading-4 text-white shadow-sm hover:bg-indigo-700 ">Добавить</button>

    @*@if (SelectedContragents.Count != 0 && ShowDeleted == false)
    {
        <button @onclick="ContragentDelete" class="inline-flex items-center rounded-md border border-transparent bg-red-600 px-3 py-2 text-sm font-medium leading-4 text-white shadow-sm hover:bg-red-700">Удалить выбранные</button>
    }*@

</div>

<div class="mt-0 flex flex-col">
    <div class="-my-2 -mx-4 overflow-x-auto sm:-mx-6 lg:-mx-8">
        <div class="inline-block min-w-full py-2 align-middle md:px-6 lg:px-8">
            <table class="min-w-full divide-y divide-gray-300">
                <thead>
                <tr>
                    <th scope="col" class="py-3.5 px-3 text-left text-sm font-semibold text-gray-900"></th>
                    @*<th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6 md:pl-0">Идентификатор</th>*@
                    <th scope="col" class="py-3.5 px-3 text-left text-sm font-semibold text-gray-900">Название контрагента</th>
                    <th scope="col" class="py-3.5 px-3 text-left text-sm font-semibold text-gray-900">Дата создания</th>
                    <th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6 md:pr-0">
                        <span class="sr-only">Действия</span>
                    </th>
                </tr>
                </thead>
                <tbody class="divide-y divide-gray-200">

                @*@if (ViewData.Contragents == null || ViewData.TotalRecords == 0)
                {
                    <tr>
                        <td class="whitespace-nowrap py-4 px-3 text-sm text-gray-500"></td>
                        $1$<td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-6 md:pl-0"></td>#1#
                        <td class="whitespace-nowrap py-4 px-3 text-sm text-gray-500">Нет данных для просмотра</td>
                        <td class="whitespace-nowrap py-4 px-3 text-sm text-gray-500"></td>
                        <td class="whitespace-nowrap py-4 px-3 text-sm text-gray-500"></td>
                    </tr>
                }
                else
                {
                    foreach (var item in ViewData.Contragents)
                    {
                        <tr>

                            @if (SelectedContragents.Any(x => x.IdContragent == item.IdContragent))
                            {
                                <td class="whitespace-nowrap py-4 px-3 text-sm text-gray-500">
                                    <input checked="checked" @onchange="eventArgs => SelectedContragent(item, eventArgs)"
                                           type="checkbox"
                                           class="before:content[''] peer relative h-5 w-5 cursor-pointer appearance-none rounded-md border border-blue-gray-200 transition-all
                                            before:absolute before:top-2/4 before:left-2/4 before:block before:h-12 before:w-12 before:-translate-y-2/4 before:-translate-x-2/4 before:rounded-full before:bg-blue-gray-500 before:opacity-0 before:transition-opacity checked:border-pink-500 checked:bg-pink-500 checked:before:bg-pink-500 hover:before:opacity-10"/>
                                </td>
                            }
                            else
                            {
                                <td class="whitespace-nowrap py-4 px-3 text-sm text-gray-500">
                                    <input @onchange="eventArgs => SelectedContragent(item, eventArgs)"
                                           type="checkbox"
                                           class="before:content[''] peer relative h-5 w-5 cursor-pointer appearance-none rounded-md border border-blue-gray-200 transition-all
                                            before:absolute before:top-2/4 before:left-2/4 before:block before:h-12 before:w-12 before:-translate-y-2/4 before:-translate-x-2/4 before:rounded-full before:bg-blue-gray-500 before:opacity-0 before:transition-opacity checked:border-pink-500 checked:bg-pink-500 checked:before:bg-pink-500 hover:before:opacity-10"/>
                                </td>
                            }

                            $1$<td class="whitespace-nowrap py-4 px-3 text-sm text-gray-500">@item.IdContragent</td>#1#
                            <td class="whitespace-nowrap py-4 px-3 text-sm ">@item.Title</td>
                            <td class="whitespace-nowrap py-4 px-3 text-sm text-gray-500">@item.DateTimeCreated</td>
                            <td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6 md:pr-0">
                                <a  class="cursor-pointer text-indigo-600 hover:text-indigo-900">Редактировать</a>
                            </td>
                        </tr>
                    }
                }*@

                </tbody>
            </table>
        </div>
    </div>
</div>

<nav class="flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3 sm:px-6" aria-label="Pagination">
    <div class="hidden sm:block">
        <p class="text-sm text-gray-700">
            Показана
            <span class="font-medium">@ViewData.CurrentPage</span>
            из
            <span class="font-medium">@ViewData.TotalPages</span> страниц. Всего
            <span class="font-medium">@ViewData.TotalRecords</span>
            записей
        </p>
    </div>
    <div class="flex flex-1 justify-between sm:justify-end">
        <a class="cursor-pointer relative inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50">Предыдущая</a>
        <a class="cursor-pointer relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50">Следующая</a>
    </div>
</nav>


<ModalAccountCreate @ref="modalAccountCreate"/>

@code {

    [Parameter]
    [SupplyParameterFromQuery]
    public string? Search { get; set; }

    [Parameter]
    [SupplyParameterFromQuery]
    public int Page { get; set; }

    [Parameter]
    [SupplyParameterFromQuery]
    public bool ShowDeleted { get; set; }

    [Parameter]
    [SupplyParameterFromQuery]
    public bool ShowEmployee { get; set; }

    private GetViewAccounts? ViewData { get; set; } = new GetViewAccounts();

    public List<Account>? SelectedDrivers { get; set; } = new List<Account>();

    IModal modalAccountCreate = new ModalAccountCreate();
    
    protected override async Task OnInitializedAsync()
    {
        ViewData = await DoRequestAsync();
        StateHasChanged();
    }

    public async void OpenModalAdd()
    {
        await modalAccountCreate.ShowAsync();
        await OnInitializedAsync();
        StateHasChanged();
    }

    private async Task<GetViewAccounts?> DoRequestAsync()
    {
        var result = await Api.Accounts
            .Get(
                token: Storage.GetItem<SessionResult>("lastSession").Token,
                search: Search,
                page: Page,
                showDeleted: ShowDeleted,
                showEmployee: ShowEmployee
            );

        if (!result.IsSuccessStatusCode)
        {
            Page = 0;
            result = await Api.Accounts
                .Get(
                    token: Storage.GetItem<SessionResult>("lastSession").Token,
                    search: Search,
                    page: Page,
                    showDeleted: ShowDeleted,
                    showEmployee: ShowEmployee
                );
        }

        return result.Content == null ? new GetViewAccounts() : JsonConvert.DeserializeObject<GetViewAccounts>(result.Content);
    }

}