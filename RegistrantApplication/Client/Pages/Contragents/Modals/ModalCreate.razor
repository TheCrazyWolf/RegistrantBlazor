@using RegistrantApplication.Shared.Contragents;

@if(IsDisplay)
{
    <div class="relative z-10 @Property" aria-labelledby="modal-title" role="dialog" aria-modal="true">
        <!--
          Background backdrop, show/hide based on modal state.

          Entering: "ease-out duration-300"
            From: "opacity-0"
            To: "opacity-100"
          Leaving: "ease-in duration-200"
            From: "opacity-100"
            To: "opacity-0"
        -->
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity backdrop-blur-md"></div>

        <div class="fixed inset-0 z-10 overflow-y-auto">
            <div class="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0 @Property1">
                <!--
                  Modal panel, show/hide based on modal state.

                  Entering: "ease-out duration-300"
                    From: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
                    To: "opacity-100 translate-y-0 sm:scale-100"
                  Leaving: "ease-in duration-200"
                    From: "opacity-100 translate-y-0 sm:scale-100"
                    To: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
                -->
                <div class="relative transform overflow-hidden rounded-lg bg-white px-4 pt-5 pb-4 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg sm:p-6">
                    <div>
                        <div class="mt-3 text-left sm:mt-1">
                            <h3 class="text-lg font-medium leading-6 text-gray-900" id="modal-title">Новый контрагент</h3>
                            <div class="mt-2">
                                <div>
                                    <label for="email" class="block text-sm font-medium leading-6 text-gray-900">Наименование контрагента</label>
                                    <input id="email" name="email" type="email"  required="" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                                </div>
                                <div>
                                    <label for="email" class="block text-sm font-medium leading-6 text-gray-900">Email address</label>
                                    <input id="email" name="email" type="datetime" disabled class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="mt-5 sm:mt-6 sm:grid sm:grid-flow-row-dense sm:grid-cols-2 sm:gap-3">
                        <button type="button" @onclick="Close" class="inline-flex w-full justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:col-start-2 sm:text-sm">Сохранить</button>
                        <button type="button" @onclick="Close" class="mt-3 inline-flex w-full justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-base font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:col-start-1 sm:mt-0 sm:text-sm">Отмена</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    public bool IsDisplay { get; set; } = false;
    public Contragent Contragent { get; set; }

    public string Property = "ease-out duration-200 opacity-0";
    public string Property1 = "ease-in duration-200 opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95";

    public async void Open()
    {
        IsDisplay = true;
        StateHasChanged();
        await Task.Delay(1000);
        
        Property = "ease-out duration-200 opacity-100";
        Property1 = "ease-out duration-200 opacity-100 translate-y-0 sm:scale-100";
        StateHasChanged();
    }
    public async void Close()
    {
        Property = "ease-out duration-200 opacity-0";
        Property1 = "ease-in duration-200 opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95";
        await Task.Delay(200);
        IsDisplay = false;
        //Display = "none";
        StateHasChanged();
    }
}
