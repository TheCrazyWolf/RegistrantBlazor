@page "/drivers"
@using RegistrantApplication.Shared.Drivers;
@using RegistrantApplication.ApiLibrary
@using RegistrantApplication.Shared.API
@using Newtonsoft.Json
@inject RApi Api;

<PageTitle>Водители</PageTitle>

<div class="grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6">

    <div class="relative rounded-md border border-gray-300 px-3 py-2 shadow-sm focus-within:border-indigo-600 focus-within:ring-1 focus-within:ring-indigo-600">
        <label class="absolute -top-2 left-2 -mt-px inline-block bg-white px-1 text-xs font-medium text-gray-900">Поиск</label>
        <input type="text" class="block w-full border-0 p-0 text-gray-900 placeholder-gray-500 focus:ring-0 sm:text-sm" placeholder="ФИО/номер телефона водителя">
    </div>
    <div class="relative flex items-center">
        <div class="flex h-5 items-center">
            <input @bind-value="ShowDeleted" type="checkbox" class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
        </div>
        <div class="ml-3 text-sm">
            <label class="font-medium text-gray-700">Удаленные</label>
        </div>
    </div>

    <button class="inline-flex items-center rounded-md border border-transparent bg-indigo-600 px-3 py-2 text-sm font-medium leading-4 text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">Поиск</button>
    <button class="inline-flex items-center rounded-md border border-transparent bg-indigo-600 px-3 py-2 text-sm font-medium leading-4 text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">Добавить</button>

    @if (SelectedDrivers.Count != 0 && ShowDeleted == false)
    {
        <button  class="inline-flex items-center rounded-md border border-transparent bg-red-600 px-3 py-2 text-sm font-medium leading-4 text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">Удалить выбранные</button>
    }

</div>


@code {

    [Parameter] [SupplyParameterFromQuery] public string? Search { get; set; }
    [Parameter] [SupplyParameterFromQuery] public int Page { get; set; }
    [Parameter] [SupplyParameterFromQuery] public bool ShowDeleted { get; set; } = false;
    
    public ViewDrivers? ViewData { get; set; } = new ViewDrivers();

    public List<Driver>? SelectedDrivers { get; set; } = new List<Driver>();

    protected override async Task OnInitializedAsync()
    {
        ViewData = await DoRequestAsync();
        StateHasChanged();
    }

    public async Task<ViewDrivers> DoRequestAsync()
    {
        var result = await Api.Drivers.Get(searchTitle: Search, page: Page, showDeleted: ShowDeleted);
        if(result.IsSuccessStatusCode)
            return JsonConvert.DeserializeObject<ViewDrivers>(result.Content);
        else
        {
            Page = 0;
            result = await Api.Contragents.Get(searchTitle: Search, pageNumber: Page, showDeleted: ShowDeleted);
            return JsonConvert.DeserializeObject<ViewDrivers>(result.Content);
        }
    }

}
